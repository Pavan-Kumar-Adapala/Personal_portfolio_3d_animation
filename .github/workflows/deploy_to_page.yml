# Deploy the vite + react + typescript project to GitHub Pages
# This workflow builds the project and deploys it to GitHub Pages
# name: deploy_to_githubpage_pipeline
# # This workflow is triggered by the completion of the static code analysis pipeline
# on:
#   workflow_run:
#     workflows: ["static_code_analysis_pipeline"]
#     types:
#       - completed
# permissions:
#   contents: write        # Needed to check out code
#   pages: write          # Needed to deploy to GitHub Pages
#   id-token: write       # Optional: useful if you use OIDC tokens (can be removed if unused)

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # static code analysis is done in the static_code_analysis_pipeline
#   # this job will only run if the static code analysis pipeline is successful
#   # and the branch is Prod
#   # it will build the project and deploy it to GitHub Pages
#   build:
#     name: Build the project
#     if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'Prod' }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 22.x # Specify the Node.js version
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci # Use npm ci for faster installs

#       - name: Build the project
#         run: npm run build
      
#       # Custom domain name for GitHub Pages
#       - name: Add CNAME file
#         run: echo "www.pavanclouds.com" > dist/CNAME # Add your custom domain here

#       - name: upload build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist # Name of the artifact
#           path: dist/* # Path to the build output directory

#   deploy:
#     name: Deploy to GitHub Pages
#     needs: build
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}

#     runs-on: ubuntu-latest
#     environment:
#       name: GitHub Pages

#     steps:
#       - name: Download build artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: dist # Name of the artifact to download
#           path: ./ # downloads to ./Personal_portfolio_3d_animation
        
#       - name: Rename dist directory
#         run: |
#           mkdir -p dist
#           shopt -s extglob   # enable extended globbing in bash
#           mv !(dist) dist/
#           ls -la ./dist

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./dist

#             - name: Setup Pages
#         uses: actions/configure-pages@v5

#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           # Upload the contents of the public directory
#           # to the GitHub Pages artifact
#           path: '.'

#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4


name: Deploy Vite + React App to GitHub Pages

on:
  push:
    branches:
      - Prod  # Only deploy when changes are pushed to the Prod branch

permissions:
  contents: write  # Required to push to gh-pages
  pages: write     # Optional if using GitHub Pages config

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x  # Use the Node.js version you're using locally
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build

      - name: Add CNAME for custom domain
        run: echo "www.pavanclouds.com" > dist/CNAME

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
