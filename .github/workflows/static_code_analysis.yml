# this yaml file is used to check linting and static code analysis
name: static_code_analysis_pipeline
on:
  pull_request:
    branches:
      - development
      - Prod
  push:
    branches:
      - development
  workflow_dispatch: null # manual trigger

jobs:
  linting:
    name: RUN ESLint
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x # Specify the Node.js version
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci # Use npm ci for faster installs

      - name: RUN ESLint
        # run: npm run lint # Run the linting script defined in package.json
        # Robust linting command below
        # This command will run ESLint on all JavaScript and TypeScript files in the repository
        run: |
          mkdir -p Lint_report
          npx eslint -c eslint.config.js --format json -o Lint_report/eslint-report.json
      
      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: Lint_report/eslint-report.json

  static_code_analysis:
    name: Run Static Code Analysis (CodeQL)
    runs-on: ubuntu-latest
    needs: linting
    permissions:
      actions: read
      contents: read
      security-events: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript,typescript
          # If you want to use a specific CodeQL version, you can specify it here
          # version: '2.10.0' # Example version, adjust as needed

      # - name: Build CodeQL database
      #   uses: github/codeql-action/autobuild@v4
      #   with:
      #     # This step will automatically build the CodeQL database for your project
      #     # If you have a specific build command, you can specify it here
      #     # build-command: npm run build
      - name: Manual build for CodeQL
        run: |
          npm ci
          npm run build

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: 'codeql-results.sarif'
          upload: true
          # If you want to specify a custom output directory, you can do so here
          # output-directory: 'path/to/output'

      - name: Upload CodeQL results
        uses: actions/upload-artifact@v4 
        with:
          name: codeql-results
        